# Data lake dictionary with detailed descriptions
data_lake_dict = {
    "affinity_capture-ms.parquet": "Protein-protein interactions detected via affinity capture and mass spectrometry.",
    "affinity_capture-rna.parquet": "Protein-RNA interactions detected by affinity capture.",
    "BindingDB_All_202409.tsv": "Measured binding affinities between proteins and small molecules for drug discovery.",
    "broad_repurposing_hub_molecule_with_smiles.parquet": "Molecules from Broad Institute's Drug Repurposing Hub with SMILES annotations.",
    "broad_repurposing_hub_phase_moa_target_info.parquet": "Drug phases, mechanisms of action, and target information from Broad Institute.",
    "co-fractionation.parquet": "Protein-protein interactions from co-fractionation experiments.",
    "czi_census_datasets_v4.parquet": "Datasets from the Chan Zuckerberg Initiative's Cell Census.",
    # "DepMap_CRISPRGeneDependency.csv": "Gene dependency probability estimates for cancer cell lines, including all DepMap models.",
    # "DepMap_CRISPRGeneEffect.csv": "Genome-wide CRISPR gene effect estimates for cancer cell lines, including all DepMap models.",
    # "DepMap_Model.csv": "Metadata describing all cancer models/cell lines which are referenced by a dataset contained within the DepMap portal.",
    # "DepMap_OmicsExpressionProteinCodingGenesTPMLogp1.csv": "Gene expression in TPMs for cancer cell lines, including all DepMap models.",
    "ddinter_alimentary_tract_metabolism.csv": "Drug-drug interactions for alimentary tract and metabolism drugs from DDInter 2.0 database.",
    "ddinter_antineoplastic.csv": "Drug-drug interactions for antineoplastic and immunomodulating agents from DDInter 2.0 database.",
    "ddinter_antiparasitic.csv": "Drug-drug interactions for antiparasitic products from DDInter 2.0 database.",
    "ddinter_blood_organs.csv": "Drug-drug interactions for blood and blood forming organs drugs from DDInter 2.0 database.",
    "ddinter_dermatological.csv": "Drug-drug interactions for dermatological drugs from DDInter 2.0 database.",
    "ddinter_hormonal.csv": "Drug-drug interactions for systemic hormonal preparations from DDInter 2.0 database.",
    "ddinter_respiratory.csv": "Drug-drug interactions for respiratory system drugs from DDInter 2.0 database.",
    "ddinter_various.csv": "Drug-drug interactions for various drugs from DDInter 2.0 database.",
    "DisGeNET.parquet": "Gene-disease associations from multiple sources.",
    "dosage_growth_defect.parquet": "Gene dosage changes affecting growth.",
    "enamine_cloud_library_smiles.pkl": "Compounds from Enamine REAL library with SMILES annotations.",
    "evebio_assay_table.csv": "Assay metadata with one row per assay from EveBio pharmome mapping.",
    "evebio_bundle_table.csv": "Target subfamily bundles used for screening-to-profiling progression.",
    "evebio_compound_table.csv": "Compound metadata with common identifiers from EveBio screening.",
    "evebio_control_table.csv": "Control datapoints for all screening and profiling plates.",
    "evebio_detailed_result_table.csv": "Expanded results on evebio_summary_result_table with curve fit parameters and phase categories.",
    "evebio_observed_points_table.csv": "Raw observed datapoints from all screening and profiling experiments.",
    "evebio_summary_result_table.csv": "Succinct summary of results for each assay-compound combination.",
    "evebio_target_table.csv": "Target metadata with common identifiers from EveBio screening.",
    "genebass_missense_LC_filtered.pkl": "Filtered missense variants from GeneBass.",
    "genebass_pLoF_filtered.pkl": "Predicted loss-of-function variants from GeneBass.",
    "genebass_synonymous_filtered.pkl": "Filtered synonymous variants from GeneBass.",
    "gene_info.parquet": "Comprehensive gene information.Use it to conversion such as ensemble name to gene name.",
    "genetic_interaction.parquet": "Genetic interactions between genes.",
    "go-plus.json": "Gene ontology data for functional gene annotations.",
    "gtex_tissue_gene_tpm.parquet": "Gene expression (TPM) across human tissues from GTEx.",
    "gwas_catalog.pkl": "This is a GWAS Catalog dataset containing 622,784 genetic variants (SNPs) associated with diseases/traits, stored as a pandas DataFrame with 34 columns including PubMed IDs, genes, chromosomal positions, p-values, risk alleles, and other genomic information.",
    "hp.obo": "Official HPO release in obographs format",
    "kg.csv": "Precision medicine knowledge graph with 17,080 diseases and 4+ million relationships across biological scales.",
    "marker_celltype.parquet": "Cell type marker genes for identification.",
    "McPAS-TCR.parquet": "T-cell receptor sequences and specificity data from McPAS database.",
    "miRDB_v6.0_results.parquet": "Predicted microRNA targets from miRDB.",
    "miRTarBase_microRNA_target_interaction.parquet": "Experimentally validated microRNA-target interactions from miRTarBase.",
    "miRTarBase_microRNA_target_interaction_pubmed_abtract.txt": "PubMed abstracts for microRNA-target interactions in miRTarBase.",
    "miRTarBase_MicroRNA_Target_Sites.parquet": "Binding sites of microRNAs on target genes from miRTarBase.",
    "mousemine_m1_positional_geneset.parquet": "Positional gene sets from MouseMine.",
    "mousemine_m2_curated_geneset.parquet": "Curated gene sets from MouseMine.",
    "mousemine_m3_regulatory_target_geneset.parquet": "Regulatory target gene sets from MouseMine.",
    "mousemine_m5_ontology_geneset.parquet": "Ontology-based gene sets from MouseMine.",
    "mousemine_m8_celltype_signature_geneset.parquet": "Cell type signature gene sets from MouseMine.",
    "mousemine_mh_hallmark_geneset.parquet": "Hallmark gene sets from MouseMine.",
    "msigdb_human_c1_positional_geneset.parquet": "Human positional gene sets from MSigDB.",
    "msigdb_human_c2_curated_geneset.parquet": "Curated human gene sets from MSigDB.",
    "msigdb_human_c3_regulatory_target_geneset.parquet": "Regulatory target gene sets from MSigDB.",
    "msigdb_human_c3_subset_transcription_factor_targets_from_GTRD.parquet": "Transcription factor targets from GTRD/MSigDB.",
    "msigdb_human_c4_computational_geneset.parquet": "Computationally derived gene sets from MSigDB.",
    "msigdb_human_c5_ontology_geneset.parquet": "Ontology-based gene sets from MSigDB.",
    "msigdb_human_c6_oncogenic_signature_geneset.parquet": "Oncogenic signatures from MSigDB.",
    "msigdb_human_c7_immunologic_signature_geneset.parquet": "Immunologic signatures from MSigDB.",
    "msigdb_human_c8_celltype_signature_geneset.parquet": "Cell type signatures from MSigDB.",
    "msigdb_human_h_hallmark_geneset.parquet": "Hallmark gene sets from MSigDB.",
    "omim.parquet": "Genetic disorders and associated genes from OMIM.",
    "proteinatlas.tsv": "Protein expression data from Human Protein Atlas.",
    "proximity_label-ms.parquet": "Protein interactions via proximity labeling and mass spectrometry.",
    "reconstituted_complex.parquet": "Protein complexes reconstituted in vitro.",
    "sgRNA_KO_SP_mouse.txt": "sgRNA knockout data for mouse.",
    "sgRNA_KO_SP_human.txt": "sgRNA knockout data for human.",
    "synthetic_growth_defect.parquet": "Synthetic growth defects from genetic interactions.",
    "synthetic_lethality.parquet": "Synthetic lethal interactions.",
    "synthetic_rescue.parquet": "Genetic interactions rescuing phenotypes.",
    "two-hybrid.parquet": "Protein-protein interactions detected by yeast two-hybrid assays.",
    "variant_table.parquet": "Annotated genetic variants table.",
    "Virus-Host_PPI_P-HIPSTER_2020.parquet": "Virus-host protein-protein interactions from P-HIPSTER.",
    "txgnn_name_mapping.pkl": "Name mapping for TXGNN.",
    "txgnn_prediction.pkl": "Prediction data for TXGNN.",
}

# Updated library_content as a dictionary with detailed descriptions
library_content_dict = {
    # === PYTHON PACKAGES ===
    # Core Bioinformatics Libraries (Python)
    "biopython": "[Python Package] The premier Python toolkit for biological computation. Provides comprehensive parsers for major bioinformatics file formats (FASTA, GenBank, PDB, BLAST XML), interfaces to online databases (NCBI, UniProt, PDB), sequence analysis tools, phylogenetic tree construction, and molecular structure manipulation. Essential for sequence alignment, motif finding, and bioinformatics workflow development.",
    "biom-format": "[Python Package] The standard Python implementation for Biological Observation Matrix (BIOM) format - the gold standard for storing microbiome and environmental sequencing data. Enables efficient storage and manipulation of sparse biological observation tables with rich metadata support, taxonomic hierarchies, and sample/observation annotations. Critical for microbiome analysis pipelines.",
    "scanpy": "[Python Package] The leading Python library for single-cell RNA sequencing analysis. Built on AnnData for scalable data handling, provides comprehensive workflows from preprocessing (filtering, normalization, batch correction) to advanced analysis (clustering, trajectory inference, differential expression). Includes visualization tools, integration methods, and extensive ecosystem compatibility with scvi-tools, cellxgene, and more.",
    "scikit-bio": "[Python Package] A comprehensive bioinformatics library providing fundamental data structures (DNA/RNA/protein sequences, phylogenetic trees, distance matrices) and algorithms for sequence analysis, alignment, phylogenetic reconstruction, diversity analysis, and ordination methods. Includes statistical tests, sequence manipulation utilities, and file I/O for standard bioinformatics formats.",
    "anndata": "[Python Package] The foundational data structure for single-cell genomics in Python. Provides annotated data matrices with rich metadata support, efficient sparse matrix handling, and seamless integration with analysis tools. Supports observations (cells) and variables (genes) annotations, multi-dimensional arrays, and both in-memory and on-disk storage for large datasets.",
    "mudata": "[Python Package] Advanced multimodal omics data container extending AnnData architecture. Designed for integrative analysis of multi-omics datasets (RNA-seq + ATAC-seq, proteomics + transcriptomics). Provides unified data structures, cross-modality analysis tools, and seamless integration with single-cell analysis ecosystems while maintaining computational efficiency.",
    "pyliftover": "[Python Package] Pure Python implementation of UCSC's liftOver utility for genomic coordinate conversion between different genome assemblies (e.g., hg19 to hg38). Essential for genomics pipelines requiring coordinate system harmonization, variant annotation updates, and cross-reference mapping. Supports chain files and batch coordinate conversion.",
    "biopandas": "[Python Package] Bridges structural biology and data science by providing pandas DataFrame interfaces for molecular structures. Enables easy manipulation of PDB files, MOL2 files, and molecular coordinates using familiar pandas operations. Ideal for structural analysis, protein-ligand interaction studies, and integration with machine learning workflows.",
    "biotite": "[Python Package] Modern, high-performance computational molecular biology library with emphasis on structural bioinformatics. Provides advanced sequence analysis, 3D structure manipulation, molecular visualization, and biophysical calculations. Features efficient algorithms for structure alignment, contact maps, secondary structure prediction, and molecular dynamics analysis preparation.",
    "lazyslide": "[Python Package] Cutting-edge computational pathology framework for whole slide image (WSI) analysis. Provides scalable preprocessing pipelines, deep learning integration, and reproducible analysis workflows for digital pathology. Features tile-based processing, multi-resolution analysis, and seamless integration with popular deep learning frameworks for histopathology research.",
    # Genomics & Variant Analysis (Python)
    "gget": "[Python Package] Comprehensive genomic data retrieval toolkit providing programmatic access to major genomic databases (Ensembl, NCBI, UniProt, PDB). Features include sequence retrieval, gene annotation lookup, homolog searching, protein structure fetching, and genomic coordinate conversion. Streamlines data acquisition for genomics pipelines with built-in caching and batch processing capabilities.",
    "lifelines": "[Python Package] Professional-grade survival analysis library for time-to-event data analysis. Implements Cox proportional hazards models, Kaplan-Meier estimators, log-rank tests, and accelerated failure time models. Features advanced plotting capabilities, model diagnostics, and statistical testing. Essential for clinical research, epidemiological studies, and biomarker discovery in oncology and drug development.",
    # "scvi-tools": "[Python Package] A package for probabilistic modeling of single-cell omics data, including deep generative models.",
    "gseapy": "[Python Package] Comprehensive Gene Set Enrichment Analysis (GSEA) toolkit with extensive pathway database integration. Performs enrichment analysis against MSigDB, GO, KEGG, Reactome, and custom gene sets. Features include pre-ranked GSEA, over-representation analysis, single-sample GSEA, and publication-ready visualizations. Supports batch processing and provides statistical rigor for functional genomics interpretation.",
    "scrublet": "[Python Package] State-of-the-art doublet detection tool for single-cell RNA sequencing data. Uses k-nearest neighbor graphs and synthetic doublet simulation to identify multiplets that can confound downstream analysis. Provides confidence scores, visualization tools, and integration with scanpy workflows. Critical for quality control in single-cell genomics pipelines.",
    "cellxgene-census": "[Python Package] Official Python client for accessing the CELLxGENE Census - the largest standardized collection of single-cell RNA-seq data. Provides programmatic access to millions of cells across hundreds of studies with harmonized metadata and gene annotations. Features efficient data slicing, cell type queries, and integration with analysis frameworks. Use download_source_h5ad() with dataset IDs for specific studies.",
    "hyperopt": "[Python Package] Advanced hyperparameter optimization library implementing Tree-structured Parzen Estimator (TPE) and adaptive algorithms. Supports parallel optimization, early stopping, and integration with popular ML frameworks. Features Bayesian optimization approaches that outperform grid search and random search. Essential for automated machine learning pipeline optimization in bioinformatics applications.",
    "scvelo": "[Python Package] Revolutionary RNA velocity analysis tool for inferring cellular dynamics from single-cell RNA-seq data. Implements dynamical, stochastic, and steady-state velocity models to predict future cell states and reconstruct developmental trajectories. Features advanced visualization, pseudotime inference, and driver gene identification. Transforms snapshot data into temporal understanding of biological processes.",
    "pysam": "[Python Package] High-performance Python interface for SAM/BAM/VCF/BCF file manipulation - the backbone of genomics data processing. Provides efficient random access, indexing, and streaming capabilities for large genomic datasets. Features include variant calling support, alignment statistics, and integration with popular genomics tools. Essential for variant analysis, coverage calculations, and genomic data preprocessing.",
    "pyfaidx": "[Python Package] Lightning-fast indexed FASTA file access library enabling random sequence retrieval from large genome assemblies. Provides memory-efficient sequence extraction, reverse complement operations, and coordinate-based queries. Features automatic indexing, streaming capabilities, and integration with genomics pipelines. Critical for reference genome access in variant calling and sequence analysis workflows.",
    "pyranges": "[Python Package] Pandas-inspired genomic intervals manipulation library providing intuitive DataFrame-like operations on genomic ranges. Features efficient intersection, merge, and overlap operations with support for strand-aware analysis. Includes statistical functions, visualization capabilities, and seamless integration with BED/GTF files. Simplifies complex genomic coordinate arithmetic and annotation tasks.",
    "pybedtools": "[Python Package] Comprehensive Python wrapper for the powerful BEDTools suite, enabling genomic interval operations within Python workflows. Provides intersection, merge, coverage, and proximity analysis with memory-efficient streaming. Features integration with pandas, matplotlib visualization, and custom analysis pipelines. Essential for genomic feature annotation, peak analysis, and regulatory element studies.",
    # "panhumanpy": "A Python package for hierarchical, cross-tissue cell type annotation of human single-cell RNA-seq data",
    # Structural Biology & Drug Discovery (Python)
    "rdkit": "[Python Package] The gold standard cheminformatics toolkit for computational chemistry and drug discovery. Provides comprehensive molecular manipulation, descriptor calculation, fingerprinting, substructure searching, and chemical reaction processing. Features advanced algorithms for molecular similarity, pharmacophore modeling, and ADMET prediction. Includes visualization tools, machine learning integration, and extensive chemical database compatibility.",
    "deeppurpose": "[Python Package] Cutting-edge deep learning framework specifically designed for drug-target interaction (DTI) prediction and drug repurposing. Implements state-of-the-art neural architectures including graph neural networks, transformers, and CNN models for molecular representation learning. Features pre-trained models, transfer learning capabilities, and comprehensive evaluation metrics for virtual screening applications.",
    "pyscreener": "[Python Package] High-throughput virtual screening platform enabling large-scale molecular docking campaigns. Provides automated workflow management, parallel processing capabilities, and integration with popular docking engines (AutoDock Vina, GOLD). Features result analysis, hit prioritization, and scalable cloud computing support for drug discovery pipelines.",
    "openbabel": "[Python Package] Universal chemical data format converter and molecular modeling toolkit supporting 110+ file formats. Provides structure optimization, conformer generation, property calculation, and chemical database searching. Features command-line tools, Python bindings, and extensive format interoperability essential for cheminformatics workflows and data integration.",
    "descriptastorus": "[Python Package] High-performance molecular descriptor calculation library optimized for large-scale machine learning applications in drug discovery. Computes 200+ molecular descriptors including physicochemical properties, topological indices, and structural alerts. Features parallel processing, caching mechanisms, and integration with popular ML frameworks for QSAR modeling.",
    # "pymol": "[Python Package] A molecular visualization system for rendering and animating 3D molecular structures.",
    "openmm": "[Python Package] Professional molecular dynamics simulation toolkit leveraging GPU acceleration for high-performance biomolecular simulations. Provides force field implementations, integrators, and analysis tools for protein folding, drug binding, and membrane dynamics studies. Features Python scripting, custom force development, and integration with structural biology workflows.",
    "pytdc": "[Python Package] Official Python interface to Therapeutics Data Commons (TDC) - the largest collection of curated machine learning datasets for drug discovery. Provides standardized benchmarks for molecular property prediction, drug-target interaction, drug combination, and clinical trial outcome prediction. Features automated data loading, evaluation metrics, and leaderboard integration.",
    # Data Science & Statistical Analysis (Python)
    "pandas": "[Python Package] The cornerstone data manipulation library for Python, providing high-performance DataFrame and Series structures for tabular data analysis. Features comprehensive data cleaning, transformation, aggregation, and merging capabilities with intuitive syntax. Includes advanced indexing, time series analysis, categorical data handling, and seamless integration with the entire Python scientific ecosystem.",
    "numpy": "[Python Package] The fundamental foundation of scientific computing in Python, providing efficient N-dimensional array operations and mathematical functions. Offers vectorized operations, broadcasting, linear algebra routines, and random number generation. Essential for all numerical computing tasks and serves as the backbone for pandas, scikit-learn, and most scientific Python libraries.",
    "scipy": "[Python Package] Comprehensive scientific computing library building on NumPy with advanced mathematical algorithms. Provides optimization routines, statistical distributions, signal processing, linear algebra solvers, interpolation methods, and scientific constants. Features sparse matrix support, spatial algorithms, and numerical integration tools essential for scientific research and engineering applications.",
    "scikit-learn": "[Python Package] The premier machine learning library for Python, offering a consistent API for classification, regression, clustering, and dimensionality reduction. Implements 100+ algorithms including ensemble methods, neural networks, and support vector machines. Features model selection tools, preprocessing utilities, evaluation metrics, and pipeline construction for production-ready ML workflows.",
    "matplotlib": "[Python Package] The foundational plotting library for Python, enabling creation of publication-quality static, animated, and interactive visualizations. Provides fine-grained control over plot elements, supports multiple output formats, and offers both MATLAB-like interface and object-oriented API. Essential for data exploration, scientific publication, and dashboard creation across all scientific domains.",
    "seaborn": "[Python Package] High-level statistical visualization library built on matplotlib, designed for exploring and understanding data through beautiful, informative plots. Provides built-in themes, statistical plot types (violin plots, heatmaps, regression plots), and automatic handling of pandas DataFrames. Simplifies complex statistical visualizations with minimal code while maintaining customization flexibility.",
    "statsmodels": "[Python Package] Professional econometrics and statistical modeling library providing comprehensive statistical tests, models, and data analysis tools. Implements linear/nonlinear regression, time series analysis, survival analysis, and hypothesis testing. Features model diagnostics, robust statistical inference, and integration with pandas for applied statistics and econometric research.",
    "pymc3": "[Python Package] Advanced Bayesian statistical modeling framework enabling probabilistic programming and Markov Chain Monte Carlo (MCMC) inference. Implements modern sampling algorithms (NUTS, HMC), variational inference, and model comparison tools. Features automatic differentiation, GPU acceleration, and intuitive syntax for complex hierarchical models in scientific research.",
    # "pystan": "[Python Package] A Python interface to Stan, a platform for statistical modeling and high-performance statistical computation.",
    "umap-learn": "[Python Package] State-of-the-art nonlinear dimensionality reduction technique based on manifold learning and topological data analysis. Preserves both local and global structure better than t-SNE while being computationally efficient. Features parametric embeddings, supervised dimension reduction, and excellent performance on high-dimensional biological data visualization and clustering.",
    "faiss-cpu": "[Python Package] High-performance similarity search and clustering library optimized for large-scale vector databases. Implements efficient approximate nearest neighbor algorithms, supports billion-scale datasets, and provides both exact and approximate search methods. Essential for recommendation systems, information retrieval, and large-scale machine learning applications requiring fast similarity computations.",
    "harmony-pytorch": "[Python Package] PyTorch implementation of the Harmony algorithm for batch effect correction and data integration in single-cell genomics. Removes technical artifacts while preserving biological variation across datasets, technologies, and experimental conditions. Features GPU acceleration, scalable processing, and seamless integration with scanpy workflows for multi-batch single-cell analysis.",
    # General Bioinformatics & Computational Utilities (Python)
    "tiledb": "[Python Package] A powerful engine for storing and analyzing large-scale genomic data.",
    "tiledbsoma": "[Python Package] A library for working with the SOMA (Stack of Matrices) format using TileDB.",
    "h5py": "[Python Package] A Python interface to the HDF5 binary data format, allowing storage of large amounts of numerical data.",
    "tqdm": "[Python Package] A fast, extensible progress bar for loops and CLI applications.",
    "joblib": "[Python Package] A set of tools to provide lightweight pipelining in Python, including transparent disk-caching and parallel computing.",
    "opencv-python": "[Python Package] OpenCV library for computer vision tasks, useful for image analysis in biological contexts.",
    "PyPDF2": "[Python Package] A library for working with PDF files, useful for extracting text from scientific papers.",
    "googlesearch-python": "[Python Package] A library for performing Google searches programmatically.",
    "scikit-image": "[Python Package] A collection of algorithms for image processing in Python.",
    "pymed": "[Python Package] A Python library for accessing PubMed articles.",
    "arxiv": "[Python Package] A Python wrapper for the arXiv API, allowing access to scientific papers.",
    "scholarly": "[Python Package] A module to retrieve author and publication information from Google Scholar.",
    "cryosparc-tools": "[Python Package] Tools for working with cryoSPARC, a platform for cryo-EM data processing.",
    "mageck": "[Python Package] Analysis of CRISPR screen data.",
    "igraph": "[Python Package] Network analysis and visualization.",
    "pyscenic": "[Python Package] Analysis of single-cell RNA-seq data and gene regulatory networks.",
    "cooler": "[Python Package] Storage and analysis of Hi-C data.",
    "trackpy": "[Python Package] Particle tracking in images and video.",
    "nnunet": "[Python Package] A deep learning framework for biomedical image segmentation, providing a standardized approach to training and inference.",
    # "flowcytometrytools": "[Python Package] Analysis and visualization of flow cytometry data.",
    "cellpose": "[Python Package] State-of-the-art deep learning-based cell segmentation tool for microscopy image analysis. Uses convolutional neural networks trained on diverse cell types to achieve accurate segmentation across different imaging modalities. Features GPU acceleration, 3D segmentation capabilities, and integration with image analysis pipelines for quantitative cell biology.",
    "viennarna": "[Python Package] Comprehensive RNA secondary structure prediction suite implementing thermodynamic folding algorithms and kinetic folding simulations. Provides minimum free energy folding, partition function calculations, and RNA-RNA interaction prediction. Features ensemble analysis, pseudoknot prediction, and integration with RNA design workflows.",
    "PyMassSpec": "[Python Package] Comprehensive mass spectrometry data analysis framework for proteomics and metabolomics applications. Provides peak detection, spectrum matching, quantification algorithms, and statistical analysis tools. Features support for multiple MS formats, isotope pattern analysis, and integration with proteomics databases for compound identification.",
    "python-libsbml": "[Python Package] Official Python bindings for libSBML library enabling manipulation and analysis of Systems Biology Markup Language (SBML) models. Provides model validation, unit checking, and conversion tools for computational systems biology. Features integration with metabolic modeling workflows and model repositories for reproducible research.",
    "cobra": "[Python Package] Constraint-based reconstruction and analysis toolkit for genome-scale metabolic models. Implements flux balance analysis, gene essentiality prediction, and metabolic engineering design algorithms. Features model reconstruction tools, visualization capabilities, and integration with experimental data for systems-level understanding of metabolism.",
    "reportlab": "[Python Package] Professional PDF generation library for creating scientific reports, publication figures, and automated documentation. Provides vector graphics, chart generation, and layout management with precise control over typography and formatting. Features template systems and integration with data analysis workflows for reproducible reporting.",
    "flowkit": "[Python Package] Modern flow cytometry data analysis toolkit providing comprehensive preprocessing, gating, and statistical analysis capabilities. Implements compensation algorithms, transformation methods, and automated gating strategies. Features integration with machine learning approaches and visualization tools for high-dimensional flow cytometry analysis.",
    "hmmlearn": "[Python Package] Hidden Markov model implementation for sequential data analysis in bioinformatics applications including gene finding, protein structure prediction, and sequence alignment. Provides Gaussian mixture models, multinomial models, and custom emission distributions. Features parameter estimation algorithms and model selection tools for biological sequence analysis.",
    "msprime": "[Python Package] Efficient coalescent simulation framework for population genetics and evolutionary studies. Generates large-scale genomic variation data with complex demographic histories, recombination, and mutation models. Features tree sequence storage, ancient DNA simulation, and integration with statistical genetics analysis tools for evolutionary inference.",
    "tskit": "[Python Package] Tree sequence toolkit for efficient storage and analysis of large-scale population genetic data and phylogenetic information. Provides genealogical analysis, mutation mapping, and statistical computation on tree sequences. Features integration with simulation tools and population genetics software for evolutionary genomics research.",
    "cyvcf2": "[Python Package] Ultra-fast VCF/BCF file parser optimized for large-scale variant analysis and population genomics studies. Provides efficient random access, filtering capabilities, and integration with NumPy arrays. Features parallel processing support and memory-efficient streaming for genome-wide association studies and variant annotation pipelines.",
    "pykalman": "[Python Package] Kalman filtering and state space modeling library for time series analysis in biological systems. Implements extended Kalman filters, unscented Kalman filters, and particle filters for dynamic system estimation. Features parameter learning algorithms and integration with biological modeling workflows for tracking cellular processes and gene expression dynamics.",
    "fanc": "[Python Package] Comprehensive framework for analysis of nuclear chromosome conformation data including Hi-C, 4C, and ChIA-PET experiments. Provides contact matrix processing, compartment analysis, topologically associating domain detection, and loop calling algorithms. Features visualization tools and integration with epigenomic data for 3D genome structure analysis.",
    "loompy": "[Python Package] High-performance implementation of the Loom file format for efficient storage and analysis of large-scale omics datasets. Provides sparse matrix storage, hierarchical metadata organization, and streaming access to million-cell datasets. Features integration with single-cell analysis tools, batch processing capabilities, and cross-platform compatibility for scalable genomics data management.",
    "pyBigWig": "[Python Package] Efficient Python library for reading and writing bigWig and bigBed files - the standard formats for genome browser track data. Provides random access to genomic signal data, statistical summaries over intervals, and integration with genomics analysis pipelines. Features memory-efficient processing and compatibility with UCSC Genome Browser ecosystem.",
    "pymzml": "[Python Package] Comprehensive Python framework for mass spectrometry data analysis supporting multiple vendor formats (mzML, mzXML, MGF). Provides spectrum parsing, peak detection, retention time alignment, and quantitative proteomics analysis. Features integration with proteomics databases and statistical analysis tools for high-throughput mass spectrometry workflows.",
    "optlang": "[Python Package] Mathematical optimization modeling framework providing symbolic representation of linear and mixed-integer programming problems. Supports multiple solvers (GLPK, CPLEX, Gurobi) with unified interface for constraint-based modeling in systems biology. Features automatic differentiation and integration with metabolic network analysis tools like COBRApy.",
    # "FlowIO": "A Python package for reading and writing flow cytometry data files.",
    # "FlowUtils": "Utilities for processing and analyzing flow cytometry data.",
    "arboreto": "[Python Package] Scalable gene regulatory network inference toolkit designed for single-cell RNA sequencing data analysis. Implements ensemble methods combining multiple algorithms (GRNBoost2, GENIE3) for robust network reconstruction. Features distributed computing support, integration with pySCENIC workflows, and statistical validation tools for regulatory network discovery.",
    "pdbfixer": "[Python Package] Professional toolkit for preprocessing and repairing Protein Data Bank (PDB) structures for molecular dynamics simulations. Provides automated fixing of missing atoms, hydrogen addition, water placement, and structure validation. Features integration with OpenMM workflows and support for membrane proteins and nucleic acids preparation.",
    # === R PACKAGES ===
    # Core R Packages for Data Analysis
    "ggplot2": "[R Package] A system for declaratively creating graphics, based on The Grammar of Graphics. Use with subprocess.run(['Rscript', '-e', 'library(ggplot2); ...']).",
    "dplyr": "[R Package] A grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges. Use with subprocess.",
    "tidyr": "[R Package] A package that helps you create tidy data, where each column is a variable, each row is an observation, and each cell is a single value. Use with subprocess.",
    "readr": "[R Package] A fast and friendly way to read rectangular data like CSV, TSV, and FWF. Use with subprocess.run(['Rscript', '-e', 'library(readr); ...']).",
    "stringr": "[R Package] A cohesive set of functions designed to make working with strings as easy as possible. Use with subprocess calls.",
    "Matrix": "[R Package] A package that provides classes and methods for dense and sparse matrices. Required for Seurat. Use with subprocess calls.",
    # "Rcpp": "[R Package] Seamless R and C++ Integration, allowing R functions to call compiled C++ code. Use with subprocess calls.",
    # "devtools": "[R Package] Tools to make developing R packages easier, including functions to install packages from GitHub. Use with subprocess calls.",
    # "remotes": "[R Package] Install R packages from GitHub, GitLab, Bitbucket, or other remote repositories. Use with subprocess calls.",
    # Bioinformatics R Packages
    "DESeq2": "[R Package] Differential gene expression analysis based on the negative binomial distribution. Use with subprocess.run(['Rscript', '-e', 'library(DESeq2); ...']).",
    "clusterProfiler": "[R Package] A package for statistical analysis and visualization of functional profiles for genes and gene clusters. Use with subprocess calls.",
    # "DADA2": "[R Package] A package for modeling and correcting Illumina-sequenced amplicon errors. Use with subprocess calls.",
    # "xcms": "[R Package] A package for processing and visualization of LC-MS and GC-MS data. Use with subprocess calls.",
    # "FlowCore": "[R Package] Basic infrastructure for flow cytometry data. Use with subprocess calls.",
    "edgeR": "[R Package] Empirical Analysis of Digital Gene Expression Data in R, for differential expression analysis. Use with subprocess calls.",
    "limma": "[R Package] Linear Models for Microarray Data, for differential expression analysis. Use with subprocess calls.",
    "harmony": "[R Package] A method for integrating and analyzing single-cell data across datasets. Use with subprocess calls.",
    "WGCNA": "[R Package] Weighted Correlation Network Analysis for studying biological networks. Use with subprocess calls.",
    # === CLI TOOLS ===
    # Sequence Analysis Tools
    "samtools": "[CLI Tool] A suite of programs for interacting with high-throughput sequencing data. Use with subprocess.run(['samtools', ...]).",
    "bowtie2": "[CLI Tool] An ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences. Use with subprocess.run(['bowtie2', ...]).",
    "bwa": "[CLI Tool] Burrows-Wheeler Aligner for mapping low-divergent sequences against a large reference genome. Use with subprocess.run(['bwa', ...]).",
    "bedtools": "[CLI Tool] A powerful toolset for genome arithmetic, allowing operations like intersect, merge, count, and complement on genomic features. Use with subprocess.run(['bedtools', ...]).",
    "macs2": "[CLI Tool] Model-based Analysis of ChIP-Seq data, a tool for identifying transcript factor binding sites.",
    # Quality Control and Processing Tools
    "fastqc": "[CLI Tool] A quality control tool for high throughput sequence data. Use with subprocess.run(['fastqc', ...]).",
    "trimmomatic": "[CLI Tool] A flexible read trimming tool for Illumina NGS data. Use with subprocess.run(['trimmomatic', ...]).",
    # Multiple Sequence Alignment and Phylogenetics
    "mafft": "[CLI Tool] A multiple sequence alignment program for unix-like operating systems. Use with subprocess.run(['mafft', ...]).",
    "Homer": "[CLI Tool] Motif discovery and next-gen sequencing analysis.",
    "FastTree": "[CLI Tool] Phylogenetic trees from sequence alignments.",
    "muscle": "[CLI Tool] Multiple sequence alignment tool.",
    # Genetic Analysis Tools
    "plink": "[CLI Tool] A comprehensive toolkit for genome association studies that can perform a range of large-scale analyses in a computationally efficient manner. Use with subprocess.run(['plink', ...]).",
    "plink2": "[CLI Tool] A comprehensive toolkit for genome association studies that can perform a range of large-scale analyses in a computationally efficient manner. Use with subprocess.run(['plink2', ...]).",
    "gcta64": "[CLI Tool] Genome-wide Complex Trait Analysis (GCTA) tool for estimating the proportion of phenotypic variance explained by genome-wide SNPs and analyzing genetic relationships. Use with subprocess.run(['gcta64', ...]).",
    "iqtree2": "[CLI Tool] An efficient phylogenetic software for maximum likelihood analysis with built-in model selection and ultrafast bootstrap. Use with subprocess.run(['iqtree2', ...]).",
    "ADFR": "AutoDock for Receptors suite for molecular docking and virtual screening. ",
    "diamond": "A sequence aligner for protein and translated DNA searches, designed for high performance analysis of big sequence data. ",
    "fcsparser": "A command-line tool for parsing and analyzing flow cytometry standard (FCS) files. ",
    "plannotate": "[CLI Tool] A tool for annotating plasmid sequences with common features. ",
    "vina": "[CLI Tool] An open-source program for molecular docking and virtual screening, known for its speed and accuracy improvements over AutoDock 4.",
    "autosite": "[CLI Tool] A binding site detection tool used to identify potential ligand binding pockets on protein structures for molecular docking.",
    "PyLabRobot": "[Python Package] A Python package for controlling liquid-handling robots and other lab automation equipment.",
}
